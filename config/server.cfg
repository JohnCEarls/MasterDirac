[logging]
log_format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
#logging levels mapped to logging.<level>
#In [29]: for i in range(100):
#   ....:     if logging.getLevelName(i) in dir(logging):
#   ....:         print i, logging.getLevelName(i)
#None for no logging
#0  - NOTSET
#10 - DEBUG
#20 - INFO
#30 - WARNING
#40 - ERROR
#50 - CRITICAL
#None if no external server
external_server_name=None
external_server_port=9021
external_server_level=50
#None if no local server
internal_server_name=localhost
#9020 - logging.handlers.DEFAULT_TCP_LOGGING_PORT
internal_server_port=9022
internal_server_level=30
#None if no stdout
stdout_level=10
boto_level=40
[launcher]
launcher_sqs_in = aurea-nebula-launcher-in
launcher_sqs_out = aurea-nebula-launcher-out
launcher_config_bucket = aurea-nebula
gpu_dual_default_config = aws-meta/cluster-defaults/gpu-dual.cfg
data_default_config = aws-meta/cluster-defaults/data.cfg
key_location = /home/sgeadmin
local_config = /scratch/sgeadmin
[source_data]
bucket = hd_source_data
data_file = exp_mat_b6_wt_q111.txt 
meta_file = metadata_b6_wt_q111.txt
annotations_file = annodata_b6.txt
agilent_file = HDLux_agilent_gene_list.txt
synonym_file = Mus_homo.gene_info
[network_config]
network_table = net_info_table
network_source = c2.cp.biocarta.v4.0.symbols.gmt
#network_source = c5.all.v4.0.symbols.gmt
[dest_data]
working_bucket = hd_working_0
meta_file = metadata_b6_wt_q111.txt
dataframe_file = trimmed_dataframe_b6.pandas
[local_settings]
working_dir = /scratch/sgeadmin/master
[run_settings]
run_meta_table=run_gpudirac_hd
run_truth_table=truth_gpudirac_hd
run_id=black_6_biocarta_wt_q111_4
server_initialization_queue=tcdirac-master
k=11
sample_block_size=32
pairs_block_size=16
nets_block_size=8
heartbeat_interval=100
permutations=100000
[intercomm_settings]
sqs_from_data_to_gpu = from-data-to-gpu-bioc
sqs_from_gpu_to_agg = from-gpu-to-agg-bioc
sqs_from_data_to_agg = from-data-to-agg-bioc
sqs_from_data_to_agg_truth = from-data-to-agg-bioc-truth
s3_from_data_to_gpu = ndp-from-data-to-gpu-bioc
s3_from_gpu_to_agg = ndp-from-gpu-to-agg-bioc
